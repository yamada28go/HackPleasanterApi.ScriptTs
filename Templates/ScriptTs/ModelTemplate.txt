@{
//コード生成に必要な一時変数をまとめて定義する

  // クラス名
  string TargetClassName = Model.TemplateFilesConfig.HeadPrefix + Model.SiteDefinition.SiteVariableName + Model.TemplateFilesConfig.EndPrefix;
  // ユーザー拡張要素が定義されたクラス名
  string ExtensionElementsClassName = TargetClassName + "ExtensionElements"; 

}

export class @Raw(TargetClassName) {
  public constructor(public _rawData: ResponseDataItems) {
    // if( null == _rawData ) {
    //   this._rawData = {}
    // }
  }

            @* ClassHashの出力定義 *@
            @foreach (var item in Model.ClassifiedInterface.ClassHash) {

<text>
                    get </text> @Raw(item.VariableName) <text> (): string
                    {
                        </text>
                        <text>
                        return this._rawData?.@(item.ColumnName);
                    }
                    </text>

<text>

                    set </text> @Raw(item.VariableName) <text> (value: string) {

                                                </text>
                        <text>
                            this._rawData.@(item.ColumnName) = value;
                    }
                            </text>

            }


            @* NumHashの出力定義 *@
            @foreach (var item in Model.ClassifiedInterface.NumHash) {

<text>
                    get </text> @Raw(item.VariableName) <text> (): number
                    {
                        </text>
                        <text>
                        return this._rawData?.@(item.ColumnName);
                    }
                    </text>

<text>

                    set </text> @Raw(item.VariableName) <text> (value: number) {

                                                </text>
                        <text>
                            this._rawData.@(item.ColumnName) = value;
                    }
                            </text>

            }


            @* DateHashの出力定義(生データ参照用) *@
            @foreach (var item in Model.ClassifiedInterface.DateHash) {

<text>
                    get </text> @Raw(item.VariableName)<text>_raw (): string
                    {
                        </text>
                        <text>
                        return this._rawData?.@(item.ColumnName);
                    }
                    </text>

<text>

                    set </text> @Raw(item.VariableName)<text>_raw (value: string) {

                                                </text>
                        <text>
                            this._rawData.@(item.ColumnName) = value;
                    }
                            </text>

            }

            @* DateHashの出力定義(PleasanterDateラッピング用) *@
            @foreach (var item in Model.ClassifiedInterface.DateHash) {

<text>
                    get </text> @Raw(item.VariableName)<text> (): PleasanterDate | null
                    {
                        </text>
                        <text>
                        const const data =  this._rawData?.@(item.ColumnName);
                        if (null !== data) {
                        return new PleasanterDate(data);
                        }

                        return null;

                    }
                    </text>

<text>

                    set </text> @Raw(item.VariableName)<text> (value: string) {

                                                </text>
                        <text>
                            if (null !== value) this._rawData.@(item.ColumnName) = value.getPleasanterDateString();
                    }
                            </text>

            }


                        @* CheckHash *@
            @foreach (var item in Model.ClassifiedInterface.CheckHash) {

<text>
                    get </text> @Raw(item.VariableName) <text> (): boolean
                    {
                        </text>
                        <text>
                        return this._rawData?.@(item.ColumnName);
                    }
                    </text>

<text>

                    set </text> @Raw(item.VariableName) <text> (value: boolean) {

                                                </text>
                        <text>
                            this._rawData.@(item.ColumnName) = value;
                    }
                            </text>

            }

}

